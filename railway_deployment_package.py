#!/usr/bin/env python3
"""
ุฅูุดุงุก ุญุฒูุฉ ูุดุฑ ูุญุฏุซุฉ ูู Railway
Create updated deployment package for Railway
"""

import os
import shutil
import zipfile
from datetime import datetime

def create_railway_package():
    """ุฅูุดุงุก ุญุฒูุฉ ูุดุฑ ูุญุฏุซุฉ"""
    
    # ุฅูุดุงุก ูุฌูุฏ ุฌุฏูุฏ
    package_name = f"railway_fixed_deployment_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    os.makedirs(package_name, exist_ok=True)
    
    print(f"๐ฆ ุฅูุดุงุก ุญุฒูุฉ ุงููุดุฑ ุงููุญุฏุซุฉ: {package_name}")
    
    # ูุณุฎ ุงููููุงุช ุงูุฃุณุงุณูุฉ
    files_to_copy = [
        'manage.py',
        'requirements.txt',
        'alhassan/',
        'competitions/',
        'static/',
        'templates/',
        'db.sqlite3'
    ]
    
    for item in files_to_copy:
        if os.path.exists(item):
            dest_path = os.path.join(package_name, item)
            if os.path.isdir(item):
                shutil.copytree(item, dest_path, dirs_exist_ok=True)
                print(f"โ ูุณุฎ ูุฌูุฏ: {item}")
            else:
                shutil.copy2(item, dest_path)
                print(f"โ ูุณุฎ ููู: {item}")
    
    # ูุณุฎ ููู nixpacks.toml ุงูุฌุฏูุฏ
    if os.path.exists('nixpacks.toml'):
        shutil.copy2('nixpacks.toml', os.path.join(package_name, 'nixpacks.toml'))
        print("โ ูุณุฎ nixpacks.toml")
    
    # ุฅูุดุงุก Procfile ูุญุฏุซ
    procfile_content = "web: python manage.py migrate && python manage.py collectstatic --noinput && gunicorn alhassan.wsgi:application --bind 0.0.0.0:$PORT"
    
    with open(os.path.join(package_name, 'Procfile'), 'w') as f:
        f.write(procfile_content)
    print("โ ุฅูุดุงุก Procfile ูุญุฏุซ")
    
    # ุฅูุดุงุก ููู .env ูููุฑุฌุน
    env_content = """# ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู Railway
WSGI_APPLICATION=alhassan.wsgi.application
DJANGO_SETTINGS_MODULE=alhassan.settings
SECRET_KEY=django-insecure-math-platform-railway-2024-xyz123
DEBUG=False
ALLOWED_HOSTS=.railway.app,.up.railway.app,localhost,127.0.0.1
PORT=8000
STATIC_URL=/static/
STATIC_ROOT=staticfiles
PYTHONPATH=/app
"""
    
    with open(os.path.join(package_name, '.env.example'), 'w', encoding='utf-8') as f:
        f.write(env_content)
    print("โ ุฅูุดุงุก .env.example")
    
    # ุฅูุดุงุก ุชุนูููุงุช ุงููุดุฑ
    instructions = f"""# ๐ ุชุนูููุงุช ุงููุดุฑ ุงููุญุฏุซุฉ ูู Railway

## ๐ฆ ุงูุญุฒูุฉ: {package_name}

### ๐ง ุงูุฅุตูุงุญุงุช ุงููุทุจูุฉ:
โ ุฅุถุงูุฉ ููู nixpacks.toml ูุน ุฅุนุฏุงุฏุงุช WSGI
โ ุชุญุฏูุซ Procfile ูุน gunicorn
โ ุฅุนุฏุงุฏุงุช ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุงูุตุญูุญุฉ
โ ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL

### ๐ ุฎุทูุงุช ุงููุดุฑ:

#### 1๏ธโฃ ูู Railway:
- ุงุญุฐู ุงููุดุฑูุน ุงูุญุงูู ุฃู ุฃูุดุฆ ูุดุฑูุน ุฌุฏูุฏ
- ุงุฎุชุฑ "Deploy from GitHub" ุฃู "Upload files"

#### 2๏ธโฃ ุฑูุน ุงููููุงุช:
- ุงุฑูุน ุฌููุน ูููุงุช ูุฐุง ุงููุฌูุฏ
- ุฃู ุงุฑูุน ุงูููู ุงููุถุบูุท

#### 3๏ธโฃ ุฅุถุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช:
- ุฃุถู PostgreSQL ูู ูุงุฆูุฉ ุงูุฎุฏูุงุช
- ุณูุชู ุฑุจุทูุง ุชููุงุฆูุงู

#### 4๏ธโฃ ูุชุบูุฑุงุช ุงูุจูุฆุฉ (ุงุฎุชูุงุฑูุฉ):
ุฅุฐุง ูู ุชุนูู nixpacks.tomlุ ุฃุถู ูุฐู ุงููุชุบูุฑุงุช ูุฏููุงู:

```
WSGI_APPLICATION=alhassan.wsgi.application
DJANGO_SETTINGS_MODULE=alhassan.settings
SECRET_KEY=django-insecure-math-platform-railway-2024-xyz123
DEBUG=False
ALLOWED_HOSTS=.railway.app,.up.railway.app,localhost,127.0.0.1
PORT=8000
```

### ๐ฏ ุงููุชูุฌุฉ ุงููุชููุนุฉ:
```
๐ ุงูุฑุงุจุท ุงูุฏุงุฆู: https://your-project.up.railway.app/student/login/
๐ ุฑูุฒ ุงูุฏุฎูู: ben25
```

### ๐ ูู ุญุงูุฉ ุงููุดุงูู:
1. ุชุญูู ูู Build Logs
2. ุชุฃูุฏ ูู ูุฌูุฏ ููู nixpacks.toml
3. ุชุญูู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
4. ุชุฃูุฏ ูู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช

### ๐ฑ ุฑุณุงูุฉ ูููุดุงุฑูุฉ (ุจุนุฏ ุงููุดุฑ):
```
๐ฏ ููุตุฉ ุงููุณุงุจูุงุช ุงูุฑูุงุถูุฉ - ุงูุฑุงุจุท ุงูุฏุงุฆู

๐ ุงูุฑุงุจุท: [ุถุน ุฑุงุจุทู ููุง]/student/login/
๐ ุฑูุฒ ุงูุฏุฎูู: ben25

๐ ุฎุทูุงุช ุงูุฏุฎูู:
1. ุงููุฑ ุงูุฑุงุจุท
2. ุงูุชุจ ุงุณูู
3. ุงูุชุจ ุงูุฑูุฒ: ben25
4. ุงุฎุชุฑ ูุณุชูุงู
5. ุงุจุฏุฃ ุงููุณุงุจูุฉ!

๐ฎ ุงุณุชูุชุนูุง! ๐
```

## โ ุงููููุงุช ุงููุชุถููุฉ:
- nixpacks.toml (ุฅุนุฏุงุฏุงุช ุงููุดุฑ)
- Procfile (ุฃูุฑ ุงูุชุดุบูู)
- .env.example (ูุชุบูุฑุงุช ุงูุจูุฆุฉ)
- ุฌููุน ูููุงุช ุงููุดุฑูุน

## ๐ ุงูุญุฒูุฉ ุฌุงูุฒุฉ ูููุดุฑ!
"""
    
    with open(os.path.join(package_name, 'DEPLOYMENT_INSTRUCTIONS.md'), 'w', encoding='utf-8') as f:
        f.write(instructions)
    print("โ ุฅูุดุงุก ุชุนูููุงุช ุงููุดุฑ")
    
    # ุฅูุดุงุก ููู ูุถุบูุท
    zip_filename = f"{package_name}.zip"
    with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(package_name):
            for file in files:
                file_path = os.path.join(root, file)
                arc_name = os.path.relpath(file_path, package_name)
                zipf.write(file_path, arc_name)
    
    print(f"โ ุฅูุดุงุก ููู ูุถุบูุท: {zip_filename}")
    
    print("\n" + "="*50)
    print("๐ ุชู ุฅูุดุงุก ุญุฒูุฉ ุงููุดุฑ ุงููุญุฏุซุฉ ุจูุฌุงุญ!")
    print("="*50)
    print(f"๐ ุงููุฌูุฏ: {package_name}")
    print(f"๐๏ธ ุงูููู ุงููุถุบูุท: {zip_filename}")
    print("๐ ุงูุชุนูููุงุช: DEPLOYMENT_INSTRUCTIONS.md")
    
    print("\n๐ ุงูุฎุทูุงุช ุงูุชุงููุฉ:")
    print("1๏ธโฃ ุงุญุฐู ุงููุดุฑูุน ุงูุญุงูู ูู Railway")
    print("2๏ธโฃ ุฃูุดุฆ ูุดุฑูุน ุฌุฏูุฏ")
    print("3๏ธโฃ ุงุฑูุน ุงูููู ุงููุถุบูุท")
    print("4๏ธโฃ ุฃุถู PostgreSQL")
    print("5๏ธโฃ ุงุญุตู ุนูู ุงูุฑุงุจุท ุงูุฏุงุฆู!")
    
    return package_name, zip_filename

if __name__ == "__main__":
    create_railway_package()
