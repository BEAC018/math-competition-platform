#!/usr/bin/env python3
"""
๐ ูุดุฑ ุนูู Replit ูุจุงุดุฑุฉ
Deploy directly to Replit
"""

import subprocess
import sys
import os

def setup_replit_files():
    """ุฅุนุฏุงุฏ ูููุงุช Replit"""
    print("๐ ุฅุนุฏุงุฏ ูููุงุช Replit...")
    
    # ููู .replit
    replit_content = '''run = "python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
language = "python3"

[nix]
channel = "stable-22_11"

[deployment]
run = ["sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"]
deploymentTarget = "cloudrun"

[env]
PYTHONPATH = "${REPL_HOME}:${PYTHONPATH}"
DJANGO_SETTINGS_MODULE = "alhassan.settings"'''

    with open('.replit', 'w', encoding='utf-8') as f:
        f.write(replit_content)
    
    print("โ ุชู ุฅูุดุงุก ููู .replit")

def create_local_server():
    """ุชุดุบูู ุฎุงุฏู ูุญูู"""
    print("๐ ุชุดุบูู ุฎุงุฏู ูุญูู...")
    
    try:
        # ุฅุนุฏุงุฏ Django
        subprocess.run([sys.executable, "manage.py", "migrate"], check=True)
        subprocess.run([sys.executable, "manage.py", "collectstatic", "--noinput"], check=True)
        
        print("\n" + "="*60)
        print("๐ฏ ุงูุฎุงุฏู ุงููุญูู ุฌุงูุฒ!")
        print("="*60)
        print("๐ ุงูุฑุงุจุท ุงููุญูู: http://localhost:8000")
        print("๐ฅ ููุชูุงููุฐ: http://localhost:8000/student/login/")
        print("๐จโ๐ซ ููุฃุณุงุชุฐุฉ: http://localhost:8000/accounts/login/")
        print("๐ ุฑูุฒ ุงูุฏุฎูู: ben25")
        print("="*60)
        print("๐ ููุดุงุฑูุฉ ุงูููุตุฉ:")
        print("1๏ธโฃ ุงุฑูุน ุงููุดุฑูุน ุนูู Replit")
        print("2๏ธโฃ ุงุถุบุท ุฒุฑ 'Run' ูู Replit")
        print("3๏ธโฃ ุณุชุญุตู ุนูู ุฑุงุจุท ุนุงู")
        print("="*60)
        
        # ุชุดุบูู ุงูุฎุงุฏู
        subprocess.run([sys.executable, "manage.py", "runserver", "0.0.0.0:8000"])
        
    except KeyboardInterrupt:
        print("\nโ ุชู ุฅููุงู ุงูุฎุงุฏู")
    except Exception as e:
        print(f"โ ุฎุทุฃ: {e}")

def create_deployment_guide():
    """ุฅูุดุงุก ุฏููู ุงููุดุฑ"""
    guide_content = """# ๐ ุฏููู ูุดุฑ ููุตุฉ ุงููุณุงุจูุงุช ุงูุฑูุงุถูุฉ

## ๐ ุงูุทุฑู ุงููุชุงุญุฉ ูููุดุฑ:

### 1๏ธโฃ Replit (ุงูุฃุณูู - ููุตู ุจู)
1. ุงุฐูุจ ุฅูู https://replit.com
2. ุฃูุดุฆ ุญุณุงุจ ุฌุฏูุฏ ุฃู ุณุฌู ุฏุฎูู
3. ุงุถุบุท "Create Repl"
4. ุงุฎุชุฑ "Import from GitHub" ุฃู "Upload folder"
5. ุงุฑูุน ูููุงุช ุงููุดุฑูุน
6. ุงุถุบุท ุฒุฑ "Run" ุงูุฃุฎุถุฑ
7. ุณุชุญุตู ุนูู ุฑุงุจุท ุนุงู ุชููุงุฆูุงู

### 2๏ธโฃ Railway
1. ุงุฐูุจ ุฅูู https://railway.app
2. ุณุฌู ุฏุฎูู ุจู GitHub
3. ุงุถุบุท "New Project"
4. ุงุฎุชุฑ "Deploy from GitHub repo"
5. ุงุฎุชุฑ ุงููุดุฑูุน
6. ุณูุชู ุงููุดุฑ ุชููุงุฆูุงู

### 3๏ธโฃ Render
1. ุงุฐูุจ ุฅูู https://render.com
2. ุฃูุดุฆ ุญุณุงุจ ุฌุฏูุฏ
3. ุงุถุบุท "New Web Service"
4. ุงุฑุจุท GitHub
5. ุงุฎุชุฑ ุงููุดุฑูุน
6. ุงุถุจุท ุงูุฅุนุฏุงุฏุงุช ูุงูุดุฑ

### 4๏ธโฃ Heroku
1. ุงุฐูุจ ุฅูู https://heroku.com
2. ุฃูุดุฆ ุญุณุงุจ ุฌุฏูุฏ
3. ุงุถุบุท "Create new app"
4. ุงุฑุจุท GitHub
5. ุงุฎุชุฑ ุงููุดุฑูุน
6. ูุนู "Automatic deploys"

## ๐ ุฑูุงุจุท ุงูููุตุฉ ุจุนุฏ ุงููุดุฑ:
- **ููุชูุงููุฐ:** [ุฑุงุจุทู]/student/login/
- **ููุฃุณุงุชุฐุฉ:** [ุฑุงุจุทู]/accounts/login/
- **ุฑูุฒ ุงูุฏุฎูู:** ben25

## ๐ฑ ุฑุณุงูุฉ ูููุดุงุฑูุฉ:
```
๐ฏ ููุตุฉ ุงููุณุงุจูุงุช ุงูุฑูุงุถูุฉ

๐ ุงูุฑุงุจุท: [ุถุน ุฑุงุจุทู ููุง]/student/login/
๐ ุฑูุฒ ุงูุฏุฎูู: ben25

๐ ุงูุฎุทูุงุช:
1. ุงููุฑ ุงูุฑุงุจุท
2. ุงูุชุจ ุงุณูู
3. ุงูุชุจ ุงูุฑูุฒ: ben25
4. ุงุฎุชุฑ ูุณุชูุงู
5. ุงุจุฏุฃ ุงููุณุงุจูุฉ!

๐ฎ ุงุณุชูุชุนูุง ุจุงูุชุนูู! ๐
```

## โ ุงูููุตุฉ ุฌุงูุฒุฉ ูููุดุฑ!
"""

    with open("DEPLOYMENT_GUIDE.md", "w", encoding='utf-8') as f:
        f.write(guide_content)
    
    print("๐ ุชู ุฅูุดุงุก ุฏููู ุงููุดุฑ: DEPLOYMENT_GUIDE.md")

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print("๐ฏ ุฅุนุฏุงุฏ ููุตุฉ ุงููุณุงุจูุงุช ุงูุฑูุงุถูุฉ ูููุดุฑ")
    print("="*55)
    
    # ุฅุนุฏุงุฏ ูููุงุช Replit
    setup_replit_files()
    
    # ุฅูุดุงุก ุฏููู ุงููุดุฑ
    create_deployment_guide()
    
    print("\nโ ุชู ุฅุนุฏุงุฏ ุงูููุตุฉ ูููุดุฑ!")
    print("๐ ุงุฎุชุฑ ุฅุญุฏู ุงูุทุฑู ุงูุชุงููุฉ:")
    print("1๏ธโฃ ุชุดุบูู ูุญูู ููุงุฎุชุจุงุฑ")
    print("2๏ธโฃ ูุดุฑ ุนูู Replit")
    print("3๏ธโฃ ูุดุฑ ุนูู ููุตุฉ ุฃุฎุฑู")
    
    choice = input("\nโ ุงุฎุชุฑ (1/2/3): ").strip()
    
    if choice == "1":
        create_local_server()
    elif choice == "2":
        print("\n๐ ุชุนูููุงุช Replit:")
        print("1. ุงุฐูุจ ุฅูู https://replit.com")
        print("2. ุฃูุดุฆ Repl ุฌุฏูุฏ")
        print("3. ุงุฑูุน ูููุงุช ุงููุดุฑูุน")
        print("4. ุงุถุบุท 'Run'")
        print("5. ุณุชุญุตู ุนูู ุฑุงุจุท ุนุงู!")
    else:
        print("\n๐ ุชุญูู ูู ููู DEPLOYMENT_GUIDE.md ููุชุนูููุงุช ุงููุงููุฉ")

if __name__ == "__main__":
    main()
